   0  $accept : programa $end

   1  programa : cabecera_programa bloque_declarativo bloque_ejecutable

   2  cabecera_programa : ID ';'
   3                    | error ';'

   4  bloque_declarativo : sentencias_declarativas

   5  sentencias_declarativas : sentencia_declarativa ';' sentencias_declarativas
   6                          | sentencia_declarativa ';'

   7  sentencia_declarativa : tipo lista_variables
   8                        | tipo FUNC '(' tipo ')' lista_variables
   9                        | sentencia_declarativa_funcion
  10                        | error lista_variables
  11                        | tipo error lista_variables
  12                        | tipo FUNC tipo ')' lista_variables
  13                        | tipo FUNC '(' error ')' lista_variables
  14                        | tipo FUNC '(' tipo lista_variables

  15  sentencia_declarativa_funcion : cabecera_funcion bloque_declarativo_funcion BEGIN bloque_ejecutable_funcion retorno_funcion END
  16                                | cabecera_funcion bloque_declarativo_funcion BEGIN bloque_ejecutable_funcion retorno_funcion postcondicion END

  17  cabecera_funcion : tipo FUNC ID '(' parametro ')'
  18                   | tipo error ID '(' parametro ')'
  19                   | tipo FUNC error '(' parametro ')'
  20                   | tipo FUNC ID '(' error ')'
  21                   | tipo FUNC ID parametro ')'
  22                   | tipo FUNC ID '(' parametro

  23  parametro : tipo ID

  24  bloque_declarativo_funcion : sentencias_declarativas_en_funcion

  25  sentencias_declarativas_en_funcion : sentencia_declarativa_en_funcion ';' sentencias_declarativas_en_funcion
  26                                     | sentencia_declarativa_en_funcion ';'

  27  sentencia_declarativa_en_funcion : tipo lista_variables

  28  retorno_funcion : RETURN '(' expresion_aritmetica ')' ';'
  29                  | RETURN '(' error ')' ';'
  30                  | RETURN '(' expresion_aritmetica ';'
  31                  | RETURN expresion_aritmetica ')' ';'
  32                  | error ';'

  33  postcondicion : POST ':' '(' condicion ')' ';'
  34                | POST ':' '(' error ')' ';'
  35                | POST '(' condicion ')' ';'
  36                | POST condicion ')' ';'
  37                | POST '(' condicion ';'
  38                | error ';'

  39  tipo : ULONG
  40       | DOUBLE

  41  lista_variables : ID ',' lista_variables
  42                  | ID

  43  bloque_ejecutable : BEGIN sentencias_ejecutables END

  44  bloque_ejecutable_funcion : sentencias_ejecutables

  45  sentencias_ejecutables : sentencia_ejecutable sentencias_ejecutables
  46                         | sentencia_ejecutable

  47  sentencia_ejecutable : sentencia_asignacion
  48                       | sentencia_llamado_funcion
  49                       | sentencia_condicional
  50                       | sentencia_imprimir
  51                       | sentencia_iterativa
  52                       | sentencia_conversion
  53                       | sentencia_try_catch

  54  sentencia_asignacion : ID ASIG expresion_aritmetica ';'
  55                       | ID error ';'

  56  sentencia_llamado_funcion : ID '(' expresion_aritmetica ')' ';'
  57                            | ID '(' error ')' ';'
  58                            | ID '(' expresion_aritmetica ';'
  59                            | ID expresion_aritmetica ')' ';'

  60  sentencia_condicional : if '(' condicion ')' THEN bloque_ejecutable_condicional ENDIF ';'
  61                        | if '(' condicion ')' THEN bloque_ejecutable_condicional ELSE bloque_ejecutable_condicional ENDIF ';'
  62                        | if '(' error ')' THEN bloque_ejecutable_condicional ENDIF ';'
  63                        | if '(' condicion THEN bloque_ejecutable_condicional ENDIF ';'
  64                        | if condicion ')' THEN bloque_ejecutable_condicional ENDIF ';'
  65                        | if '(' condicion ')' error ';'

  66  if : IF

  67  condicion : expresion_booleana operacion_booleana condicion
  68            | expresion_booleana

  69  expresion_booleana : expresion_aritmetica comparador expresion_aritmetica

  70  comparador : COMP_MAYOR_IGUAL
  71             | COMP_MENOR_IGUAL
  72             | COMP_IGUAL
  73             | COMP_DISTINTO
  74             | '<'
  75             | '>'

  76  operacion_booleana : AND
  77                     | OR

  78  bloque_ejecutable_condicional : BEGIN sentencias_ejecutables END
  79                                | sentencia_ejecutable

  80  sentencia_imprimir : print '(' CADENA ')' ';'
  81                     | print '(' error ')' ';'
  82                     | print '(' CADENA ';'
  83                     | print CADENA ')' ';'
  84                     | print error ';'

  85  print : PRINT

  86  sentencia_iterativa : while '(' condicion ')' DO bloque_ejecutable_iterativo
  87                      | while '(' condicion ')' bloque_ejecutable_iterativo
  88                      | while '(' condicion ')' error bloque_ejecutable_iterativo
  89                      | while '(' error ')' DO bloque_ejecutable_iterativo
  90                      | while '(' condicion DO bloque_ejecutable_iterativo
  91                      | while condicion ')' DO bloque_ejecutable_iterativo

  92  while : WHILE

  93  bloque_ejecutable_iterativo : BEGIN sentencias_ejecutables_iterativas END
  94                              | sentencia_ejecutable_iterativa

  95  sentencias_ejecutables_iterativas : sentencia_ejecutable_iterativa sentencias_ejecutables_iterativas
  96                                    | sentencia_ejecutable_iterativa

  97  sentencia_ejecutable_iterativa : sentencia_asignacion
  98                                 | sentencia_llamado_funcion
  99                                 | sentencia_condicional
 100                                 | sentencia_imprimir
 101                                 | sentencia_iterativa
 102                                 | sentencia_conversion
 103                                 | sentencia_try_catch
 104                                 | sentencia_break

 105  sentencia_break : BREAK ';'

 106  sentencia_conversion : DOUBLE '(' expresion_aritmetica ')' ';'
 107                       | DOUBLE '(' error ')' ';'
 108                       | DOUBLE '(' expresion_aritmetica ';'
 109                       | DOUBLE expresion_aritmetica ')' ';'

 110  sentencia_try_catch : try sentencia_ejecutable_con_anidamiento CATCH bloque_ejecutable
 111                      | try sentencia_ejecutable_con_anidamiento error bloque_ejecutable
 112                      | try sentencia_ejecutable_con_anidamiento bloque_ejecutable

 113  try : TRY

 114  sentencia_ejecutable_con_anidamiento : sentencia_asignacion
 115                                       | sentencia_llamado_funcion
 116                                       | sentencia_condicional
 117                                       | sentencia_imprimir
 118                                       | sentencia_iterativa
 119                                       | sentencia_conversion

 120  expresion_aritmetica : expresion_aritmetica '+' termino
 121                       | expresion_aritmetica '-' termino
 122                       | termino

 123  termino : termino '*' factor
 124          | termino '/' factor
 125          | factor
 126          | '-' factor

 127  factor : ID
 128         | CTE_ULONG
 129         | CTE_DOUBLE

state 0
	$accept : . programa $end  (0)

	error  shift 1
	ID  shift 2
	.  error

	programa  goto 3
	cabecera_programa  goto 4


state 1
	cabecera_programa : error . ';'  (3)

	';'  shift 5
	.  error


state 2
	cabecera_programa : ID . ';'  (2)

	';'  shift 6
	.  error


state 3
	$accept : programa . $end  (0)

	$end  accept


state 4
	programa : cabecera_programa . bloque_declarativo bloque_ejecutable  (1)

	error  shift 7
	ULONG  shift 8
	DOUBLE  shift 9
	.  error

	bloque_declarativo  goto 10
	sentencias_declarativas  goto 11
	sentencia_declarativa  goto 12
	tipo  goto 13
	sentencia_declarativa_funcion  goto 14
	cabecera_funcion  goto 15


state 5
	cabecera_programa : error ';' .  (3)

	.  reduce 3


state 6
	cabecera_programa : ID ';' .  (2)

	.  reduce 2


state 7
	sentencia_declarativa : error . lista_variables  (10)

	ID  shift 16
	.  error

	lista_variables  goto 17


state 8
	tipo : ULONG .  (39)

	.  reduce 39


state 9
	tipo : DOUBLE .  (40)

	.  reduce 40


state 10
	programa : cabecera_programa bloque_declarativo . bloque_ejecutable  (1)

	BEGIN  shift 18
	.  error

	bloque_ejecutable  goto 19


state 11
	bloque_declarativo : sentencias_declarativas .  (4)

	.  reduce 4


state 12
	sentencias_declarativas : sentencia_declarativa . ';' sentencias_declarativas  (5)
	sentencias_declarativas : sentencia_declarativa . ';'  (6)

	';'  shift 20
	.  error


state 13
	sentencia_declarativa : tipo . lista_variables  (7)
	sentencia_declarativa : tipo . FUNC '(' tipo ')' lista_variables  (8)
	sentencia_declarativa : tipo . error lista_variables  (11)
	sentencia_declarativa : tipo . FUNC tipo ')' lista_variables  (12)
	sentencia_declarativa : tipo . FUNC '(' error ')' lista_variables  (13)
	sentencia_declarativa : tipo . FUNC '(' tipo lista_variables  (14)
	cabecera_funcion : tipo . FUNC ID '(' parametro ')'  (17)
	cabecera_funcion : tipo . error ID '(' parametro ')'  (18)
	cabecera_funcion : tipo . FUNC error '(' parametro ')'  (19)
	cabecera_funcion : tipo . FUNC ID '(' error ')'  (20)
	cabecera_funcion : tipo . FUNC ID parametro ')'  (21)
	cabecera_funcion : tipo . FUNC ID '(' parametro  (22)

	error  shift 21
	FUNC  shift 22
	ID  shift 16
	.  error

	lista_variables  goto 23


state 14
	sentencia_declarativa : sentencia_declarativa_funcion .  (9)

	.  reduce 9


state 15
	sentencia_declarativa_funcion : cabecera_funcion . bloque_declarativo_funcion BEGIN bloque_ejecutable_funcion retorno_funcion END  (15)
	sentencia_declarativa_funcion : cabecera_funcion . bloque_declarativo_funcion BEGIN bloque_ejecutable_funcion retorno_funcion postcondicion END  (16)

	ULONG  shift 8
	DOUBLE  shift 9
	.  error

	tipo  goto 24
	bloque_declarativo_funcion  goto 25
	sentencias_declarativas_en_funcion  goto 26
	sentencia_declarativa_en_funcion  goto 27


state 16
	lista_variables : ID . ',' lista_variables  (41)
	lista_variables : ID .  (42)

	','  shift 28
	';'  reduce 42


state 17
	sentencia_declarativa : error lista_variables .  (10)

	.  reduce 10


state 18
	bloque_ejecutable : BEGIN . sentencias_ejecutables END  (43)

	IF  shift 29
	PRINT  shift 30
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencias_ejecutables  goto 35
	sentencia_ejecutable  goto 36
	sentencia_asignacion  goto 37
	sentencia_llamado_funcion  goto 38
	sentencia_condicional  goto 39
	sentencia_imprimir  goto 40
	sentencia_iterativa  goto 41
	sentencia_conversion  goto 42
	sentencia_try_catch  goto 43
	if  goto 44
	print  goto 45
	while  goto 46
	try  goto 47


state 19
	programa : cabecera_programa bloque_declarativo bloque_ejecutable .  (1)

	.  reduce 1


state 20
	sentencias_declarativas : sentencia_declarativa ';' . sentencias_declarativas  (5)
	sentencias_declarativas : sentencia_declarativa ';' .  (6)

	error  shift 7
	ULONG  shift 8
	DOUBLE  shift 9
	BEGIN  reduce 6

	sentencias_declarativas  goto 48
	sentencia_declarativa  goto 12
	tipo  goto 13
	sentencia_declarativa_funcion  goto 14
	cabecera_funcion  goto 15


state 21
	sentencia_declarativa : tipo error . lista_variables  (11)
	cabecera_funcion : tipo error . ID '(' parametro ')'  (18)

	ID  shift 49
	.  error

	lista_variables  goto 50


state 22
	sentencia_declarativa : tipo FUNC . '(' tipo ')' lista_variables  (8)
	sentencia_declarativa : tipo FUNC . tipo ')' lista_variables  (12)
	sentencia_declarativa : tipo FUNC . '(' error ')' lista_variables  (13)
	sentencia_declarativa : tipo FUNC . '(' tipo lista_variables  (14)
	cabecera_funcion : tipo FUNC . ID '(' parametro ')'  (17)
	cabecera_funcion : tipo FUNC . error '(' parametro ')'  (19)
	cabecera_funcion : tipo FUNC . ID '(' error ')'  (20)
	cabecera_funcion : tipo FUNC . ID parametro ')'  (21)
	cabecera_funcion : tipo FUNC . ID '(' parametro  (22)

	error  shift 51
	ULONG  shift 8
	DOUBLE  shift 9
	ID  shift 52
	'('  shift 53
	.  error

	tipo  goto 54


state 23
	sentencia_declarativa : tipo lista_variables .  (7)

	.  reduce 7


state 24
	sentencia_declarativa_en_funcion : tipo . lista_variables  (27)

	ID  shift 16
	.  error

	lista_variables  goto 55


state 25
	sentencia_declarativa_funcion : cabecera_funcion bloque_declarativo_funcion . BEGIN bloque_ejecutable_funcion retorno_funcion END  (15)
	sentencia_declarativa_funcion : cabecera_funcion bloque_declarativo_funcion . BEGIN bloque_ejecutable_funcion retorno_funcion postcondicion END  (16)

	BEGIN  shift 56
	.  error


state 26
	bloque_declarativo_funcion : sentencias_declarativas_en_funcion .  (24)

	.  reduce 24


state 27
	sentencias_declarativas_en_funcion : sentencia_declarativa_en_funcion . ';' sentencias_declarativas_en_funcion  (25)
	sentencias_declarativas_en_funcion : sentencia_declarativa_en_funcion . ';'  (26)

	';'  shift 57
	.  error


state 28
	lista_variables : ID ',' . lista_variables  (41)

	ID  shift 16
	.  error

	lista_variables  goto 58


state 29
	if : IF .  (66)

	.  reduce 66


state 30
	print : PRINT .  (85)

	.  reduce 85


state 31
	sentencia_conversion : DOUBLE . '(' expresion_aritmetica ')' ';'  (106)
	sentencia_conversion : DOUBLE . '(' error ')' ';'  (107)
	sentencia_conversion : DOUBLE . '(' expresion_aritmetica ';'  (108)
	sentencia_conversion : DOUBLE . expresion_aritmetica ')' ';'  (109)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'('  shift 62
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 64
	termino  goto 65
	factor  goto 66


state 32
	while : WHILE .  (92)

	.  reduce 92


state 33
	sentencia_asignacion : ID . ASIG expresion_aritmetica ';'  (54)
	sentencia_asignacion : ID . error ';'  (55)
	sentencia_llamado_funcion : ID . '(' expresion_aritmetica ')' ';'  (56)
	sentencia_llamado_funcion : ID . '(' error ')' ';'  (57)
	sentencia_llamado_funcion : ID . '(' expresion_aritmetica ';'  (58)
	sentencia_llamado_funcion : ID . expresion_aritmetica ')' ';'  (59)

	error  shift 67
	ASIG  shift 68
	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'('  shift 69
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 70
	termino  goto 65
	factor  goto 66


state 34
	try : TRY .  (113)

	.  reduce 113


state 35
	bloque_ejecutable : BEGIN sentencias_ejecutables . END  (43)

	END  shift 71
	.  error


state 36
	sentencias_ejecutables : sentencia_ejecutable . sentencias_ejecutables  (45)
	sentencias_ejecutables : sentencia_ejecutable .  (46)

	IF  shift 29
	PRINT  shift 30
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	error  reduce 46
	RETURN  reduce 46
	END  reduce 46

	sentencias_ejecutables  goto 72
	sentencia_ejecutable  goto 36
	sentencia_asignacion  goto 37
	sentencia_llamado_funcion  goto 38
	sentencia_condicional  goto 39
	sentencia_imprimir  goto 40
	sentencia_iterativa  goto 41
	sentencia_conversion  goto 42
	sentencia_try_catch  goto 43
	if  goto 44
	print  goto 45
	while  goto 46
	try  goto 47


state 37
	sentencia_ejecutable : sentencia_asignacion .  (47)

	.  reduce 47


state 38
	sentencia_ejecutable : sentencia_llamado_funcion .  (48)

	.  reduce 48


state 39
	sentencia_ejecutable : sentencia_condicional .  (49)

	.  reduce 49


state 40
	sentencia_ejecutable : sentencia_imprimir .  (50)

	.  reduce 50


state 41
	sentencia_ejecutable : sentencia_iterativa .  (51)

	.  reduce 51


state 42
	sentencia_ejecutable : sentencia_conversion .  (52)

	.  reduce 52


state 43
	sentencia_ejecutable : sentencia_try_catch .  (53)

	.  reduce 53


state 44
	sentencia_condicional : if . '(' condicion ')' THEN bloque_ejecutable_condicional ENDIF ';'  (60)
	sentencia_condicional : if . '(' condicion ')' THEN bloque_ejecutable_condicional ELSE bloque_ejecutable_condicional ENDIF ';'  (61)
	sentencia_condicional : if . '(' error ')' THEN bloque_ejecutable_condicional ENDIF ';'  (62)
	sentencia_condicional : if . '(' condicion THEN bloque_ejecutable_condicional ENDIF ';'  (63)
	sentencia_condicional : if . condicion ')' THEN bloque_ejecutable_condicional ENDIF ';'  (64)
	sentencia_condicional : if . '(' condicion ')' error ';'  (65)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'('  shift 73
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 74
	condicion  goto 75
	expresion_booleana  goto 76
	termino  goto 65
	factor  goto 66


state 45
	sentencia_imprimir : print . '(' CADENA ')' ';'  (80)
	sentencia_imprimir : print . '(' error ')' ';'  (81)
	sentencia_imprimir : print . '(' CADENA ';'  (82)
	sentencia_imprimir : print . CADENA ')' ';'  (83)
	sentencia_imprimir : print . error ';'  (84)

	error  shift 77
	CADENA  shift 78
	'('  shift 79
	.  error


state 46
	sentencia_iterativa : while . '(' condicion ')' DO bloque_ejecutable_iterativo  (86)
	sentencia_iterativa : while . '(' condicion ')' bloque_ejecutable_iterativo  (87)
	sentencia_iterativa : while . '(' condicion ')' error bloque_ejecutable_iterativo  (88)
	sentencia_iterativa : while . '(' error ')' DO bloque_ejecutable_iterativo  (89)
	sentencia_iterativa : while . '(' condicion DO bloque_ejecutable_iterativo  (90)
	sentencia_iterativa : while . condicion ')' DO bloque_ejecutable_iterativo  (91)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'('  shift 80
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 74
	condicion  goto 81
	expresion_booleana  goto 76
	termino  goto 65
	factor  goto 66


state 47
	sentencia_try_catch : try . sentencia_ejecutable_con_anidamiento CATCH bloque_ejecutable  (110)
	sentencia_try_catch : try . sentencia_ejecutable_con_anidamiento error bloque_ejecutable  (111)
	sentencia_try_catch : try . sentencia_ejecutable_con_anidamiento bloque_ejecutable  (112)

	IF  shift 29
	PRINT  shift 30
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	.  error

	sentencia_asignacion  goto 82
	sentencia_llamado_funcion  goto 83
	sentencia_condicional  goto 84
	sentencia_imprimir  goto 85
	sentencia_iterativa  goto 86
	sentencia_conversion  goto 87
	if  goto 44
	print  goto 45
	while  goto 46
	sentencia_ejecutable_con_anidamiento  goto 88


state 48
	sentencias_declarativas : sentencia_declarativa ';' sentencias_declarativas .  (5)

	.  reduce 5


state 49
	cabecera_funcion : tipo error ID . '(' parametro ')'  (18)
	lista_variables : ID . ',' lista_variables  (41)
	lista_variables : ID .  (42)

	'('  shift 89
	','  shift 28
	';'  reduce 42


state 50
	sentencia_declarativa : tipo error lista_variables .  (11)

	.  reduce 11


state 51
	cabecera_funcion : tipo FUNC error . '(' parametro ')'  (19)

	'('  shift 90
	.  error


state 52
	cabecera_funcion : tipo FUNC ID . '(' parametro ')'  (17)
	cabecera_funcion : tipo FUNC ID . '(' error ')'  (20)
	cabecera_funcion : tipo FUNC ID . parametro ')'  (21)
	cabecera_funcion : tipo FUNC ID . '(' parametro  (22)

	ULONG  shift 8
	DOUBLE  shift 9
	'('  shift 91
	.  error

	tipo  goto 92
	parametro  goto 93


state 53
	sentencia_declarativa : tipo FUNC '(' . tipo ')' lista_variables  (8)
	sentencia_declarativa : tipo FUNC '(' . error ')' lista_variables  (13)
	sentencia_declarativa : tipo FUNC '(' . tipo lista_variables  (14)

	error  shift 94
	ULONG  shift 8
	DOUBLE  shift 9
	.  error

	tipo  goto 95


state 54
	sentencia_declarativa : tipo FUNC tipo . ')' lista_variables  (12)

	')'  shift 96
	.  error


state 55
	sentencia_declarativa_en_funcion : tipo lista_variables .  (27)

	.  reduce 27


state 56
	sentencia_declarativa_funcion : cabecera_funcion bloque_declarativo_funcion BEGIN . bloque_ejecutable_funcion retorno_funcion END  (15)
	sentencia_declarativa_funcion : cabecera_funcion bloque_declarativo_funcion BEGIN . bloque_ejecutable_funcion retorno_funcion postcondicion END  (16)

	IF  shift 29
	PRINT  shift 30
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	bloque_ejecutable_funcion  goto 97
	sentencias_ejecutables  goto 98
	sentencia_ejecutable  goto 36
	sentencia_asignacion  goto 37
	sentencia_llamado_funcion  goto 38
	sentencia_condicional  goto 39
	sentencia_imprimir  goto 40
	sentencia_iterativa  goto 41
	sentencia_conversion  goto 42
	sentencia_try_catch  goto 43
	if  goto 44
	print  goto 45
	while  goto 46
	try  goto 47


state 57
	sentencias_declarativas_en_funcion : sentencia_declarativa_en_funcion ';' . sentencias_declarativas_en_funcion  (25)
	sentencias_declarativas_en_funcion : sentencia_declarativa_en_funcion ';' .  (26)

	ULONG  shift 8
	DOUBLE  shift 9
	BEGIN  reduce 26

	tipo  goto 24
	sentencias_declarativas_en_funcion  goto 99
	sentencia_declarativa_en_funcion  goto 27


state 58
	lista_variables : ID ',' lista_variables .  (41)

	.  reduce 41


state 59
	factor : ID .  (127)

	.  reduce 127


state 60
	factor : CTE_ULONG .  (128)

	.  reduce 128


state 61
	factor : CTE_DOUBLE .  (129)

	.  reduce 129


state 62
	sentencia_conversion : DOUBLE '(' . expresion_aritmetica ')' ';'  (106)
	sentencia_conversion : DOUBLE '(' . error ')' ';'  (107)
	sentencia_conversion : DOUBLE '(' . expresion_aritmetica ';'  (108)

	error  shift 100
	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 101
	termino  goto 65
	factor  goto 66


state 63
	termino : '-' . factor  (126)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	.  error

	factor  goto 102


state 64
	sentencia_conversion : DOUBLE expresion_aritmetica . ')' ';'  (109)
	expresion_aritmetica : expresion_aritmetica . '+' termino  (120)
	expresion_aritmetica : expresion_aritmetica . '-' termino  (121)

	')'  shift 103
	'+'  shift 104
	'-'  shift 105
	.  error


state 65
	expresion_aritmetica : termino .  (122)
	termino : termino . '*' factor  (123)
	termino : termino . '/' factor  (124)

	'*'  shift 106
	'/'  shift 107
	THEN  reduce 122
	DO  reduce 122
	COMP_MAYOR_IGUAL  reduce 122
	COMP_MENOR_IGUAL  reduce 122
	COMP_IGUAL  reduce 122
	AND  reduce 122
	OR  reduce 122
	COMP_DISTINTO  reduce 122
	';'  reduce 122
	')'  reduce 122
	'<'  reduce 122
	'>'  reduce 122
	'+'  reduce 122
	'-'  reduce 122


state 66
	termino : factor .  (125)

	.  reduce 125


state 67
	sentencia_asignacion : ID error . ';'  (55)

	';'  shift 108
	.  error


state 68
	sentencia_asignacion : ID ASIG . expresion_aritmetica ';'  (54)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 109
	termino  goto 65
	factor  goto 66


state 69
	sentencia_llamado_funcion : ID '(' . expresion_aritmetica ')' ';'  (56)
	sentencia_llamado_funcion : ID '(' . error ')' ';'  (57)
	sentencia_llamado_funcion : ID '(' . expresion_aritmetica ';'  (58)

	error  shift 110
	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 111
	termino  goto 65
	factor  goto 66


state 70
	sentencia_llamado_funcion : ID expresion_aritmetica . ')' ';'  (59)
	expresion_aritmetica : expresion_aritmetica . '+' termino  (120)
	expresion_aritmetica : expresion_aritmetica . '-' termino  (121)

	')'  shift 112
	'+'  shift 104
	'-'  shift 105
	.  error


state 71
	bloque_ejecutable : BEGIN sentencias_ejecutables END .  (43)

	.  reduce 43


state 72
	sentencias_ejecutables : sentencia_ejecutable sentencias_ejecutables .  (45)

	.  reduce 45


state 73
	sentencia_condicional : if '(' . condicion ')' THEN bloque_ejecutable_condicional ENDIF ';'  (60)
	sentencia_condicional : if '(' . condicion ')' THEN bloque_ejecutable_condicional ELSE bloque_ejecutable_condicional ENDIF ';'  (61)
	sentencia_condicional : if '(' . error ')' THEN bloque_ejecutable_condicional ENDIF ';'  (62)
	sentencia_condicional : if '(' . condicion THEN bloque_ejecutable_condicional ENDIF ';'  (63)
	sentencia_condicional : if '(' . condicion ')' error ';'  (65)

	error  shift 113
	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 74
	condicion  goto 114
	expresion_booleana  goto 76
	termino  goto 65
	factor  goto 66


state 74
	expresion_booleana : expresion_aritmetica . comparador expresion_aritmetica  (69)
	expresion_aritmetica : expresion_aritmetica . '+' termino  (120)
	expresion_aritmetica : expresion_aritmetica . '-' termino  (121)

	COMP_MAYOR_IGUAL  shift 115
	COMP_MENOR_IGUAL  shift 116
	COMP_IGUAL  shift 117
	COMP_DISTINTO  shift 118
	'<'  shift 119
	'>'  shift 120
	'+'  shift 104
	'-'  shift 105
	.  error

	comparador  goto 121


state 75
	sentencia_condicional : if condicion . ')' THEN bloque_ejecutable_condicional ENDIF ';'  (64)

	')'  shift 122
	.  error


state 76
	condicion : expresion_booleana . operacion_booleana condicion  (67)
	condicion : expresion_booleana .  (68)

	AND  shift 123
	OR  shift 124
	THEN  reduce 68
	DO  reduce 68
	';'  reduce 68
	')'  reduce 68

	operacion_booleana  goto 125


state 77
	sentencia_imprimir : print error . ';'  (84)

	';'  shift 126
	.  error


state 78
	sentencia_imprimir : print CADENA . ')' ';'  (83)

	')'  shift 127
	.  error


state 79
	sentencia_imprimir : print '(' . CADENA ')' ';'  (80)
	sentencia_imprimir : print '(' . error ')' ';'  (81)
	sentencia_imprimir : print '(' . CADENA ';'  (82)

	error  shift 128
	CADENA  shift 129
	.  error


state 80
	sentencia_iterativa : while '(' . condicion ')' DO bloque_ejecutable_iterativo  (86)
	sentencia_iterativa : while '(' . condicion ')' bloque_ejecutable_iterativo  (87)
	sentencia_iterativa : while '(' . condicion ')' error bloque_ejecutable_iterativo  (88)
	sentencia_iterativa : while '(' . error ')' DO bloque_ejecutable_iterativo  (89)
	sentencia_iterativa : while '(' . condicion DO bloque_ejecutable_iterativo  (90)

	error  shift 130
	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 74
	condicion  goto 131
	expresion_booleana  goto 76
	termino  goto 65
	factor  goto 66


state 81
	sentencia_iterativa : while condicion . ')' DO bloque_ejecutable_iterativo  (91)

	')'  shift 132
	.  error


state 82
	sentencia_ejecutable_con_anidamiento : sentencia_asignacion .  (114)

	.  reduce 114


state 83
	sentencia_ejecutable_con_anidamiento : sentencia_llamado_funcion .  (115)

	.  reduce 115


state 84
	sentencia_ejecutable_con_anidamiento : sentencia_condicional .  (116)

	.  reduce 116


state 85
	sentencia_ejecutable_con_anidamiento : sentencia_imprimir .  (117)

	.  reduce 117


state 86
	sentencia_ejecutable_con_anidamiento : sentencia_iterativa .  (118)

	.  reduce 118


state 87
	sentencia_ejecutable_con_anidamiento : sentencia_conversion .  (119)

	.  reduce 119


state 88
	sentencia_try_catch : try sentencia_ejecutable_con_anidamiento . CATCH bloque_ejecutable  (110)
	sentencia_try_catch : try sentencia_ejecutable_con_anidamiento . error bloque_ejecutable  (111)
	sentencia_try_catch : try sentencia_ejecutable_con_anidamiento . bloque_ejecutable  (112)

	error  shift 133
	BEGIN  shift 18
	CATCH  shift 134
	.  error

	bloque_ejecutable  goto 135


state 89
	cabecera_funcion : tipo error ID '(' . parametro ')'  (18)

	ULONG  shift 8
	DOUBLE  shift 9
	.  error

	tipo  goto 92
	parametro  goto 136


state 90
	cabecera_funcion : tipo FUNC error '(' . parametro ')'  (19)

	ULONG  shift 8
	DOUBLE  shift 9
	.  error

	tipo  goto 92
	parametro  goto 137


state 91
	cabecera_funcion : tipo FUNC ID '(' . parametro ')'  (17)
	cabecera_funcion : tipo FUNC ID '(' . error ')'  (20)
	cabecera_funcion : tipo FUNC ID '(' . parametro  (22)

	error  shift 138
	ULONG  shift 8
	DOUBLE  shift 9
	.  error

	tipo  goto 92
	parametro  goto 139


state 92
	parametro : tipo . ID  (23)

	ID  shift 140
	.  error


state 93
	cabecera_funcion : tipo FUNC ID parametro . ')'  (21)

	')'  shift 141
	.  error


state 94
	sentencia_declarativa : tipo FUNC '(' error . ')' lista_variables  (13)

	')'  shift 142
	.  error


state 95
	sentencia_declarativa : tipo FUNC '(' tipo . ')' lista_variables  (8)
	sentencia_declarativa : tipo FUNC '(' tipo . lista_variables  (14)

	ID  shift 16
	')'  shift 143
	.  error

	lista_variables  goto 144


state 96
	sentencia_declarativa : tipo FUNC tipo ')' . lista_variables  (12)

	ID  shift 16
	.  error

	lista_variables  goto 145


state 97
	sentencia_declarativa_funcion : cabecera_funcion bloque_declarativo_funcion BEGIN bloque_ejecutable_funcion . retorno_funcion END  (15)
	sentencia_declarativa_funcion : cabecera_funcion bloque_declarativo_funcion BEGIN bloque_ejecutable_funcion . retorno_funcion postcondicion END  (16)

	error  shift 146
	RETURN  shift 147
	.  error

	retorno_funcion  goto 148


state 98
	bloque_ejecutable_funcion : sentencias_ejecutables .  (44)

	.  reduce 44


state 99
	sentencias_declarativas_en_funcion : sentencia_declarativa_en_funcion ';' sentencias_declarativas_en_funcion .  (25)

	.  reduce 25


state 100
	sentencia_conversion : DOUBLE '(' error . ')' ';'  (107)

	')'  shift 149
	.  error


state 101
	sentencia_conversion : DOUBLE '(' expresion_aritmetica . ')' ';'  (106)
	sentencia_conversion : DOUBLE '(' expresion_aritmetica . ';'  (108)
	expresion_aritmetica : expresion_aritmetica . '+' termino  (120)
	expresion_aritmetica : expresion_aritmetica . '-' termino  (121)

	';'  shift 150
	')'  shift 151
	'+'  shift 104
	'-'  shift 105
	.  error


state 102
	termino : '-' factor .  (126)

	.  reduce 126


state 103
	sentencia_conversion : DOUBLE expresion_aritmetica ')' . ';'  (109)

	';'  shift 152
	.  error


state 104
	expresion_aritmetica : expresion_aritmetica '+' . termino  (120)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'-'  shift 63
	.  error

	termino  goto 153
	factor  goto 66


state 105
	expresion_aritmetica : expresion_aritmetica '-' . termino  (121)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'-'  shift 63
	.  error

	termino  goto 154
	factor  goto 66


state 106
	termino : termino '*' . factor  (123)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	.  error

	factor  goto 155


state 107
	termino : termino '/' . factor  (124)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	.  error

	factor  goto 156


state 108
	sentencia_asignacion : ID error ';' .  (55)

	.  reduce 55


state 109
	sentencia_asignacion : ID ASIG expresion_aritmetica . ';'  (54)
	expresion_aritmetica : expresion_aritmetica . '+' termino  (120)
	expresion_aritmetica : expresion_aritmetica . '-' termino  (121)

	';'  shift 157
	'+'  shift 104
	'-'  shift 105
	.  error


state 110
	sentencia_llamado_funcion : ID '(' error . ')' ';'  (57)

	')'  shift 158
	.  error


state 111
	sentencia_llamado_funcion : ID '(' expresion_aritmetica . ')' ';'  (56)
	sentencia_llamado_funcion : ID '(' expresion_aritmetica . ';'  (58)
	expresion_aritmetica : expresion_aritmetica . '+' termino  (120)
	expresion_aritmetica : expresion_aritmetica . '-' termino  (121)

	';'  shift 159
	')'  shift 160
	'+'  shift 104
	'-'  shift 105
	.  error


state 112
	sentencia_llamado_funcion : ID expresion_aritmetica ')' . ';'  (59)

	';'  shift 161
	.  error


state 113
	sentencia_condicional : if '(' error . ')' THEN bloque_ejecutable_condicional ENDIF ';'  (62)

	')'  shift 162
	.  error


state 114
	sentencia_condicional : if '(' condicion . ')' THEN bloque_ejecutable_condicional ENDIF ';'  (60)
	sentencia_condicional : if '(' condicion . ')' THEN bloque_ejecutable_condicional ELSE bloque_ejecutable_condicional ENDIF ';'  (61)
	sentencia_condicional : if '(' condicion . THEN bloque_ejecutable_condicional ENDIF ';'  (63)
	sentencia_condicional : if '(' condicion . ')' error ';'  (65)

	THEN  shift 163
	')'  shift 164
	.  error


state 115
	comparador : COMP_MAYOR_IGUAL .  (70)

	.  reduce 70


state 116
	comparador : COMP_MENOR_IGUAL .  (71)

	.  reduce 71


state 117
	comparador : COMP_IGUAL .  (72)

	.  reduce 72


state 118
	comparador : COMP_DISTINTO .  (73)

	.  reduce 73


state 119
	comparador : '<' .  (74)

	.  reduce 74


state 120
	comparador : '>' .  (75)

	.  reduce 75


state 121
	expresion_booleana : expresion_aritmetica comparador . expresion_aritmetica  (69)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 165
	termino  goto 65
	factor  goto 66


state 122
	sentencia_condicional : if condicion ')' . THEN bloque_ejecutable_condicional ENDIF ';'  (64)

	THEN  shift 166
	.  error


state 123
	operacion_booleana : AND .  (76)

	.  reduce 76


state 124
	operacion_booleana : OR .  (77)

	.  reduce 77


state 125
	condicion : expresion_booleana operacion_booleana . condicion  (67)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 74
	condicion  goto 167
	expresion_booleana  goto 76
	termino  goto 65
	factor  goto 66


state 126
	sentencia_imprimir : print error ';' .  (84)

	.  reduce 84


state 127
	sentencia_imprimir : print CADENA ')' . ';'  (83)

	';'  shift 168
	.  error


state 128
	sentencia_imprimir : print '(' error . ')' ';'  (81)

	')'  shift 169
	.  error


state 129
	sentencia_imprimir : print '(' CADENA . ')' ';'  (80)
	sentencia_imprimir : print '(' CADENA . ';'  (82)

	';'  shift 170
	')'  shift 171
	.  error


state 130
	sentencia_iterativa : while '(' error . ')' DO bloque_ejecutable_iterativo  (89)

	')'  shift 172
	.  error


state 131
	sentencia_iterativa : while '(' condicion . ')' DO bloque_ejecutable_iterativo  (86)
	sentencia_iterativa : while '(' condicion . ')' bloque_ejecutable_iterativo  (87)
	sentencia_iterativa : while '(' condicion . ')' error bloque_ejecutable_iterativo  (88)
	sentencia_iterativa : while '(' condicion . DO bloque_ejecutable_iterativo  (90)

	DO  shift 173
	')'  shift 174
	.  error


state 132
	sentencia_iterativa : while condicion ')' . DO bloque_ejecutable_iterativo  (91)

	DO  shift 175
	.  error


state 133
	sentencia_try_catch : try sentencia_ejecutable_con_anidamiento error . bloque_ejecutable  (111)

	BEGIN  shift 18
	.  error

	bloque_ejecutable  goto 176


state 134
	sentencia_try_catch : try sentencia_ejecutable_con_anidamiento CATCH . bloque_ejecutable  (110)

	BEGIN  shift 18
	.  error

	bloque_ejecutable  goto 177


state 135
	sentencia_try_catch : try sentencia_ejecutable_con_anidamiento bloque_ejecutable .  (112)

	.  reduce 112


state 136
	cabecera_funcion : tipo error ID '(' parametro . ')'  (18)

	')'  shift 178
	.  error


state 137
	cabecera_funcion : tipo FUNC error '(' parametro . ')'  (19)

	')'  shift 179
	.  error


state 138
	cabecera_funcion : tipo FUNC ID '(' error . ')'  (20)

	')'  shift 180
	.  error


state 139
	cabecera_funcion : tipo FUNC ID '(' parametro . ')'  (17)
	cabecera_funcion : tipo FUNC ID '(' parametro .  (22)

	')'  shift 181
	ULONG  reduce 22
	DOUBLE  reduce 22


state 140
	parametro : tipo ID .  (23)

	.  reduce 23


state 141
	cabecera_funcion : tipo FUNC ID parametro ')' .  (21)

	.  reduce 21


state 142
	sentencia_declarativa : tipo FUNC '(' error ')' . lista_variables  (13)

	ID  shift 16
	.  error

	lista_variables  goto 182


state 143
	sentencia_declarativa : tipo FUNC '(' tipo ')' . lista_variables  (8)

	ID  shift 16
	.  error

	lista_variables  goto 183


state 144
	sentencia_declarativa : tipo FUNC '(' tipo lista_variables .  (14)

	.  reduce 14


state 145
	sentencia_declarativa : tipo FUNC tipo ')' lista_variables .  (12)

	.  reduce 12


state 146
	retorno_funcion : error . ';'  (32)

	';'  shift 184
	.  error


state 147
	retorno_funcion : RETURN . '(' expresion_aritmetica ')' ';'  (28)
	retorno_funcion : RETURN . '(' error ')' ';'  (29)
	retorno_funcion : RETURN . '(' expresion_aritmetica ';'  (30)
	retorno_funcion : RETURN . expresion_aritmetica ')' ';'  (31)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'('  shift 185
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 186
	termino  goto 65
	factor  goto 66


state 148
	sentencia_declarativa_funcion : cabecera_funcion bloque_declarativo_funcion BEGIN bloque_ejecutable_funcion retorno_funcion . END  (15)
	sentencia_declarativa_funcion : cabecera_funcion bloque_declarativo_funcion BEGIN bloque_ejecutable_funcion retorno_funcion . postcondicion END  (16)

	error  shift 187
	END  shift 188
	POST  shift 189
	.  error

	postcondicion  goto 190


state 149
	sentencia_conversion : DOUBLE '(' error ')' . ';'  (107)

	';'  shift 191
	.  error


state 150
	sentencia_conversion : DOUBLE '(' expresion_aritmetica ';' .  (108)

	.  reduce 108


state 151
	sentencia_conversion : DOUBLE '(' expresion_aritmetica ')' . ';'  (106)

	';'  shift 192
	.  error


state 152
	sentencia_conversion : DOUBLE expresion_aritmetica ')' ';' .  (109)

	.  reduce 109


state 153
	expresion_aritmetica : expresion_aritmetica '+' termino .  (120)
	termino : termino . '*' factor  (123)
	termino : termino . '/' factor  (124)

	'*'  shift 106
	'/'  shift 107
	THEN  reduce 120
	DO  reduce 120
	COMP_MAYOR_IGUAL  reduce 120
	COMP_MENOR_IGUAL  reduce 120
	COMP_IGUAL  reduce 120
	AND  reduce 120
	OR  reduce 120
	COMP_DISTINTO  reduce 120
	';'  reduce 120
	')'  reduce 120
	'<'  reduce 120
	'>'  reduce 120
	'+'  reduce 120
	'-'  reduce 120


state 154
	expresion_aritmetica : expresion_aritmetica '-' termino .  (121)
	termino : termino . '*' factor  (123)
	termino : termino . '/' factor  (124)

	'*'  shift 106
	'/'  shift 107
	THEN  reduce 121
	DO  reduce 121
	COMP_MAYOR_IGUAL  reduce 121
	COMP_MENOR_IGUAL  reduce 121
	COMP_IGUAL  reduce 121
	AND  reduce 121
	OR  reduce 121
	COMP_DISTINTO  reduce 121
	';'  reduce 121
	')'  reduce 121
	'<'  reduce 121
	'>'  reduce 121
	'+'  reduce 121
	'-'  reduce 121


state 155
	termino : termino '*' factor .  (123)

	.  reduce 123


state 156
	termino : termino '/' factor .  (124)

	.  reduce 124


state 157
	sentencia_asignacion : ID ASIG expresion_aritmetica ';' .  (54)

	.  reduce 54


state 158
	sentencia_llamado_funcion : ID '(' error ')' . ';'  (57)

	';'  shift 193
	.  error


state 159
	sentencia_llamado_funcion : ID '(' expresion_aritmetica ';' .  (58)

	.  reduce 58


state 160
	sentencia_llamado_funcion : ID '(' expresion_aritmetica ')' . ';'  (56)

	';'  shift 194
	.  error


state 161
	sentencia_llamado_funcion : ID expresion_aritmetica ')' ';' .  (59)

	.  reduce 59


state 162
	sentencia_condicional : if '(' error ')' . THEN bloque_ejecutable_condicional ENDIF ';'  (62)

	THEN  shift 195
	.  error


state 163
	sentencia_condicional : if '(' condicion THEN . bloque_ejecutable_condicional ENDIF ';'  (63)

	IF  shift 29
	PRINT  shift 30
	BEGIN  shift 196
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencia_ejecutable  goto 197
	sentencia_asignacion  goto 37
	sentencia_llamado_funcion  goto 38
	sentencia_condicional  goto 39
	sentencia_imprimir  goto 40
	sentencia_iterativa  goto 41
	sentencia_conversion  goto 42
	sentencia_try_catch  goto 43
	if  goto 44
	bloque_ejecutable_condicional  goto 198
	print  goto 45
	while  goto 46
	try  goto 47


state 164
	sentencia_condicional : if '(' condicion ')' . THEN bloque_ejecutable_condicional ENDIF ';'  (60)
	sentencia_condicional : if '(' condicion ')' . THEN bloque_ejecutable_condicional ELSE bloque_ejecutable_condicional ENDIF ';'  (61)
	sentencia_condicional : if '(' condicion ')' . error ';'  (65)

	error  shift 199
	THEN  shift 200
	.  error


state 165
	expresion_booleana : expresion_aritmetica comparador expresion_aritmetica .  (69)
	expresion_aritmetica : expresion_aritmetica . '+' termino  (120)
	expresion_aritmetica : expresion_aritmetica . '-' termino  (121)

	'+'  shift 104
	'-'  shift 105
	THEN  reduce 69
	DO  reduce 69
	AND  reduce 69
	OR  reduce 69
	';'  reduce 69
	')'  reduce 69


state 166
	sentencia_condicional : if condicion ')' THEN . bloque_ejecutable_condicional ENDIF ';'  (64)

	IF  shift 29
	PRINT  shift 30
	BEGIN  shift 196
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencia_ejecutable  goto 197
	sentencia_asignacion  goto 37
	sentencia_llamado_funcion  goto 38
	sentencia_condicional  goto 39
	sentencia_imprimir  goto 40
	sentencia_iterativa  goto 41
	sentencia_conversion  goto 42
	sentencia_try_catch  goto 43
	if  goto 44
	bloque_ejecutable_condicional  goto 201
	print  goto 45
	while  goto 46
	try  goto 47


state 167
	condicion : expresion_booleana operacion_booleana condicion .  (67)

	.  reduce 67


state 168
	sentencia_imprimir : print CADENA ')' ';' .  (83)

	.  reduce 83


state 169
	sentencia_imprimir : print '(' error ')' . ';'  (81)

	';'  shift 202
	.  error


state 170
	sentencia_imprimir : print '(' CADENA ';' .  (82)

	.  reduce 82


state 171
	sentencia_imprimir : print '(' CADENA ')' . ';'  (80)

	';'  shift 203
	.  error


state 172
	sentencia_iterativa : while '(' error ')' . DO bloque_ejecutable_iterativo  (89)

	DO  shift 204
	.  error


state 173
	sentencia_iterativa : while '(' condicion DO . bloque_ejecutable_iterativo  (90)

	IF  shift 29
	PRINT  shift 30
	BEGIN  shift 205
	BREAK  shift 206
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencia_asignacion  goto 207
	sentencia_llamado_funcion  goto 208
	sentencia_condicional  goto 209
	sentencia_imprimir  goto 210
	sentencia_iterativa  goto 211
	sentencia_conversion  goto 212
	sentencia_try_catch  goto 213
	if  goto 44
	print  goto 45
	while  goto 46
	bloque_ejecutable_iterativo  goto 214
	sentencia_ejecutable_iterativa  goto 215
	sentencia_break  goto 216
	try  goto 47


state 174
	sentencia_iterativa : while '(' condicion ')' . DO bloque_ejecutable_iterativo  (86)
	sentencia_iterativa : while '(' condicion ')' . bloque_ejecutable_iterativo  (87)
	sentencia_iterativa : while '(' condicion ')' . error bloque_ejecutable_iterativo  (88)

	error  shift 217
	IF  shift 29
	PRINT  shift 30
	BEGIN  shift 205
	BREAK  shift 206
	DOUBLE  shift 31
	WHILE  shift 32
	DO  shift 218
	ID  shift 33
	TRY  shift 34
	.  error

	sentencia_asignacion  goto 207
	sentencia_llamado_funcion  goto 208
	sentencia_condicional  goto 209
	sentencia_imprimir  goto 210
	sentencia_iterativa  goto 211
	sentencia_conversion  goto 212
	sentencia_try_catch  goto 213
	if  goto 44
	print  goto 45
	while  goto 46
	bloque_ejecutable_iterativo  goto 219
	sentencia_ejecutable_iterativa  goto 215
	sentencia_break  goto 216
	try  goto 47


state 175
	sentencia_iterativa : while condicion ')' DO . bloque_ejecutable_iterativo  (91)

	IF  shift 29
	PRINT  shift 30
	BEGIN  shift 205
	BREAK  shift 206
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencia_asignacion  goto 207
	sentencia_llamado_funcion  goto 208
	sentencia_condicional  goto 209
	sentencia_imprimir  goto 210
	sentencia_iterativa  goto 211
	sentencia_conversion  goto 212
	sentencia_try_catch  goto 213
	if  goto 44
	print  goto 45
	while  goto 46
	bloque_ejecutable_iterativo  goto 220
	sentencia_ejecutable_iterativa  goto 215
	sentencia_break  goto 216
	try  goto 47


state 176
	sentencia_try_catch : try sentencia_ejecutable_con_anidamiento error bloque_ejecutable .  (111)

	.  reduce 111


state 177
	sentencia_try_catch : try sentencia_ejecutable_con_anidamiento CATCH bloque_ejecutable .  (110)

	.  reduce 110


state 178
	cabecera_funcion : tipo error ID '(' parametro ')' .  (18)

	.  reduce 18


state 179
	cabecera_funcion : tipo FUNC error '(' parametro ')' .  (19)

	.  reduce 19


state 180
	cabecera_funcion : tipo FUNC ID '(' error ')' .  (20)

	.  reduce 20


state 181
	cabecera_funcion : tipo FUNC ID '(' parametro ')' .  (17)

	.  reduce 17


state 182
	sentencia_declarativa : tipo FUNC '(' error ')' lista_variables .  (13)

	.  reduce 13


state 183
	sentencia_declarativa : tipo FUNC '(' tipo ')' lista_variables .  (8)

	.  reduce 8


state 184
	retorno_funcion : error ';' .  (32)

	.  reduce 32


state 185
	retorno_funcion : RETURN '(' . expresion_aritmetica ')' ';'  (28)
	retorno_funcion : RETURN '(' . error ')' ';'  (29)
	retorno_funcion : RETURN '(' . expresion_aritmetica ';'  (30)

	error  shift 221
	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 222
	termino  goto 65
	factor  goto 66


state 186
	retorno_funcion : RETURN expresion_aritmetica . ')' ';'  (31)
	expresion_aritmetica : expresion_aritmetica . '+' termino  (120)
	expresion_aritmetica : expresion_aritmetica . '-' termino  (121)

	')'  shift 223
	'+'  shift 104
	'-'  shift 105
	.  error


state 187
	postcondicion : error . ';'  (38)

	';'  shift 224
	.  error


state 188
	sentencia_declarativa_funcion : cabecera_funcion bloque_declarativo_funcion BEGIN bloque_ejecutable_funcion retorno_funcion END .  (15)

	.  reduce 15


state 189
	postcondicion : POST . ':' '(' condicion ')' ';'  (33)
	postcondicion : POST . ':' '(' error ')' ';'  (34)
	postcondicion : POST . '(' condicion ')' ';'  (35)
	postcondicion : POST . condicion ')' ';'  (36)
	postcondicion : POST . '(' condicion ';'  (37)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'('  shift 225
	':'  shift 226
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 74
	condicion  goto 227
	expresion_booleana  goto 76
	termino  goto 65
	factor  goto 66


state 190
	sentencia_declarativa_funcion : cabecera_funcion bloque_declarativo_funcion BEGIN bloque_ejecutable_funcion retorno_funcion postcondicion . END  (16)

	END  shift 228
	.  error


state 191
	sentencia_conversion : DOUBLE '(' error ')' ';' .  (107)

	.  reduce 107


state 192
	sentencia_conversion : DOUBLE '(' expresion_aritmetica ')' ';' .  (106)

	.  reduce 106


state 193
	sentencia_llamado_funcion : ID '(' error ')' ';' .  (57)

	.  reduce 57


state 194
	sentencia_llamado_funcion : ID '(' expresion_aritmetica ')' ';' .  (56)

	.  reduce 56


state 195
	sentencia_condicional : if '(' error ')' THEN . bloque_ejecutable_condicional ENDIF ';'  (62)

	IF  shift 29
	PRINT  shift 30
	BEGIN  shift 196
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencia_ejecutable  goto 197
	sentencia_asignacion  goto 37
	sentencia_llamado_funcion  goto 38
	sentencia_condicional  goto 39
	sentencia_imprimir  goto 40
	sentencia_iterativa  goto 41
	sentencia_conversion  goto 42
	sentencia_try_catch  goto 43
	if  goto 44
	bloque_ejecutable_condicional  goto 229
	print  goto 45
	while  goto 46
	try  goto 47


state 196
	bloque_ejecutable_condicional : BEGIN . sentencias_ejecutables END  (78)

	IF  shift 29
	PRINT  shift 30
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencias_ejecutables  goto 230
	sentencia_ejecutable  goto 36
	sentencia_asignacion  goto 37
	sentencia_llamado_funcion  goto 38
	sentencia_condicional  goto 39
	sentencia_imprimir  goto 40
	sentencia_iterativa  goto 41
	sentencia_conversion  goto 42
	sentencia_try_catch  goto 43
	if  goto 44
	print  goto 45
	while  goto 46
	try  goto 47


state 197
	bloque_ejecutable_condicional : sentencia_ejecutable .  (79)

	.  reduce 79


state 198
	sentencia_condicional : if '(' condicion THEN bloque_ejecutable_condicional . ENDIF ';'  (63)

	ENDIF  shift 231
	.  error


state 199
	sentencia_condicional : if '(' condicion ')' error . ';'  (65)

	';'  shift 232
	.  error


state 200
	sentencia_condicional : if '(' condicion ')' THEN . bloque_ejecutable_condicional ENDIF ';'  (60)
	sentencia_condicional : if '(' condicion ')' THEN . bloque_ejecutable_condicional ELSE bloque_ejecutable_condicional ENDIF ';'  (61)

	IF  shift 29
	PRINT  shift 30
	BEGIN  shift 196
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencia_ejecutable  goto 197
	sentencia_asignacion  goto 37
	sentencia_llamado_funcion  goto 38
	sentencia_condicional  goto 39
	sentencia_imprimir  goto 40
	sentencia_iterativa  goto 41
	sentencia_conversion  goto 42
	sentencia_try_catch  goto 43
	if  goto 44
	bloque_ejecutable_condicional  goto 233
	print  goto 45
	while  goto 46
	try  goto 47


state 201
	sentencia_condicional : if condicion ')' THEN bloque_ejecutable_condicional . ENDIF ';'  (64)

	ENDIF  shift 234
	.  error


state 202
	sentencia_imprimir : print '(' error ')' ';' .  (81)

	.  reduce 81


state 203
	sentencia_imprimir : print '(' CADENA ')' ';' .  (80)

	.  reduce 80


state 204
	sentencia_iterativa : while '(' error ')' DO . bloque_ejecutable_iterativo  (89)

	IF  shift 29
	PRINT  shift 30
	BEGIN  shift 205
	BREAK  shift 206
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencia_asignacion  goto 207
	sentencia_llamado_funcion  goto 208
	sentencia_condicional  goto 209
	sentencia_imprimir  goto 210
	sentencia_iterativa  goto 211
	sentencia_conversion  goto 212
	sentencia_try_catch  goto 213
	if  goto 44
	print  goto 45
	while  goto 46
	bloque_ejecutable_iterativo  goto 235
	sentencia_ejecutable_iterativa  goto 215
	sentencia_break  goto 216
	try  goto 47


state 205
	bloque_ejecutable_iterativo : BEGIN . sentencias_ejecutables_iterativas END  (93)

	IF  shift 29
	PRINT  shift 30
	BREAK  shift 206
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencia_asignacion  goto 207
	sentencia_llamado_funcion  goto 208
	sentencia_condicional  goto 209
	sentencia_imprimir  goto 210
	sentencia_iterativa  goto 211
	sentencia_conversion  goto 212
	sentencia_try_catch  goto 213
	if  goto 44
	print  goto 45
	while  goto 46
	sentencias_ejecutables_iterativas  goto 236
	sentencia_ejecutable_iterativa  goto 237
	sentencia_break  goto 216
	try  goto 47


state 206
	sentencia_break : BREAK . ';'  (105)

	';'  shift 238
	.  error


state 207
	sentencia_ejecutable_iterativa : sentencia_asignacion .  (97)

	.  reduce 97


state 208
	sentencia_ejecutable_iterativa : sentencia_llamado_funcion .  (98)

	.  reduce 98


state 209
	sentencia_ejecutable_iterativa : sentencia_condicional .  (99)

	.  reduce 99


state 210
	sentencia_ejecutable_iterativa : sentencia_imprimir .  (100)

	.  reduce 100


state 211
	sentencia_ejecutable_iterativa : sentencia_iterativa .  (101)

	.  reduce 101


state 212
	sentencia_ejecutable_iterativa : sentencia_conversion .  (102)

	.  reduce 102


state 213
	sentencia_ejecutable_iterativa : sentencia_try_catch .  (103)

	.  reduce 103


state 214
	sentencia_iterativa : while '(' condicion DO bloque_ejecutable_iterativo .  (90)

	.  reduce 90


state 215
	bloque_ejecutable_iterativo : sentencia_ejecutable_iterativa .  (94)

	.  reduce 94


state 216
	sentencia_ejecutable_iterativa : sentencia_break .  (104)

	.  reduce 104


state 217
	sentencia_iterativa : while '(' condicion ')' error . bloque_ejecutable_iterativo  (88)

	IF  shift 29
	PRINT  shift 30
	BEGIN  shift 205
	BREAK  shift 206
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencia_asignacion  goto 207
	sentencia_llamado_funcion  goto 208
	sentencia_condicional  goto 209
	sentencia_imprimir  goto 210
	sentencia_iterativa  goto 211
	sentencia_conversion  goto 212
	sentencia_try_catch  goto 213
	if  goto 44
	print  goto 45
	while  goto 46
	bloque_ejecutable_iterativo  goto 239
	sentencia_ejecutable_iterativa  goto 215
	sentencia_break  goto 216
	try  goto 47


state 218
	sentencia_iterativa : while '(' condicion ')' DO . bloque_ejecutable_iterativo  (86)

	IF  shift 29
	PRINT  shift 30
	BEGIN  shift 205
	BREAK  shift 206
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencia_asignacion  goto 207
	sentencia_llamado_funcion  goto 208
	sentencia_condicional  goto 209
	sentencia_imprimir  goto 210
	sentencia_iterativa  goto 211
	sentencia_conversion  goto 212
	sentencia_try_catch  goto 213
	if  goto 44
	print  goto 45
	while  goto 46
	bloque_ejecutable_iterativo  goto 240
	sentencia_ejecutable_iterativa  goto 215
	sentencia_break  goto 216
	try  goto 47


state 219
	sentencia_iterativa : while '(' condicion ')' bloque_ejecutable_iterativo .  (87)

	.  reduce 87


state 220
	sentencia_iterativa : while condicion ')' DO bloque_ejecutable_iterativo .  (91)

	.  reduce 91


state 221
	retorno_funcion : RETURN '(' error . ')' ';'  (29)

	')'  shift 241
	.  error


state 222
	retorno_funcion : RETURN '(' expresion_aritmetica . ')' ';'  (28)
	retorno_funcion : RETURN '(' expresion_aritmetica . ';'  (30)
	expresion_aritmetica : expresion_aritmetica . '+' termino  (120)
	expresion_aritmetica : expresion_aritmetica . '-' termino  (121)

	';'  shift 242
	')'  shift 243
	'+'  shift 104
	'-'  shift 105
	.  error


state 223
	retorno_funcion : RETURN expresion_aritmetica ')' . ';'  (31)

	';'  shift 244
	.  error


state 224
	postcondicion : error ';' .  (38)

	.  reduce 38


state 225
	postcondicion : POST '(' . condicion ')' ';'  (35)
	postcondicion : POST '(' . condicion ';'  (37)

	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 74
	condicion  goto 245
	expresion_booleana  goto 76
	termino  goto 65
	factor  goto 66


state 226
	postcondicion : POST ':' . '(' condicion ')' ';'  (33)
	postcondicion : POST ':' . '(' error ')' ';'  (34)

	'('  shift 246
	.  error


state 227
	postcondicion : POST condicion . ')' ';'  (36)

	')'  shift 247
	.  error


state 228
	sentencia_declarativa_funcion : cabecera_funcion bloque_declarativo_funcion BEGIN bloque_ejecutable_funcion retorno_funcion postcondicion END .  (16)

	.  reduce 16


state 229
	sentencia_condicional : if '(' error ')' THEN bloque_ejecutable_condicional . ENDIF ';'  (62)

	ENDIF  shift 248
	.  error


state 230
	bloque_ejecutable_condicional : BEGIN sentencias_ejecutables . END  (78)

	END  shift 249
	.  error


state 231
	sentencia_condicional : if '(' condicion THEN bloque_ejecutable_condicional ENDIF . ';'  (63)

	';'  shift 250
	.  error


state 232
	sentencia_condicional : if '(' condicion ')' error ';' .  (65)

	.  reduce 65


state 233
	sentencia_condicional : if '(' condicion ')' THEN bloque_ejecutable_condicional . ENDIF ';'  (60)
	sentencia_condicional : if '(' condicion ')' THEN bloque_ejecutable_condicional . ELSE bloque_ejecutable_condicional ENDIF ';'  (61)

	ELSE  shift 251
	ENDIF  shift 252
	.  error


state 234
	sentencia_condicional : if condicion ')' THEN bloque_ejecutable_condicional ENDIF . ';'  (64)

	';'  shift 253
	.  error


state 235
	sentencia_iterativa : while '(' error ')' DO bloque_ejecutable_iterativo .  (89)

	.  reduce 89


state 236
	bloque_ejecutable_iterativo : BEGIN sentencias_ejecutables_iterativas . END  (93)

	END  shift 254
	.  error


state 237
	sentencias_ejecutables_iterativas : sentencia_ejecutable_iterativa . sentencias_ejecutables_iterativas  (95)
	sentencias_ejecutables_iterativas : sentencia_ejecutable_iterativa .  (96)

	IF  shift 29
	PRINT  shift 30
	BREAK  shift 206
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	END  reduce 96

	sentencia_asignacion  goto 207
	sentencia_llamado_funcion  goto 208
	sentencia_condicional  goto 209
	sentencia_imprimir  goto 210
	sentencia_iterativa  goto 211
	sentencia_conversion  goto 212
	sentencia_try_catch  goto 213
	if  goto 44
	print  goto 45
	while  goto 46
	sentencias_ejecutables_iterativas  goto 255
	sentencia_ejecutable_iterativa  goto 237
	sentencia_break  goto 216
	try  goto 47


state 238
	sentencia_break : BREAK ';' .  (105)

	.  reduce 105


state 239
	sentencia_iterativa : while '(' condicion ')' error bloque_ejecutable_iterativo .  (88)

	.  reduce 88


state 240
	sentencia_iterativa : while '(' condicion ')' DO bloque_ejecutable_iterativo .  (86)

	.  reduce 86


state 241
	retorno_funcion : RETURN '(' error ')' . ';'  (29)

	';'  shift 256
	.  error


state 242
	retorno_funcion : RETURN '(' expresion_aritmetica ';' .  (30)

	.  reduce 30


state 243
	retorno_funcion : RETURN '(' expresion_aritmetica ')' . ';'  (28)

	';'  shift 257
	.  error


state 244
	retorno_funcion : RETURN expresion_aritmetica ')' ';' .  (31)

	.  reduce 31


state 245
	postcondicion : POST '(' condicion . ')' ';'  (35)
	postcondicion : POST '(' condicion . ';'  (37)

	';'  shift 258
	')'  shift 259
	.  error


state 246
	postcondicion : POST ':' '(' . condicion ')' ';'  (33)
	postcondicion : POST ':' '(' . error ')' ';'  (34)

	error  shift 260
	ID  shift 59
	CTE_ULONG  shift 60
	CTE_DOUBLE  shift 61
	'-'  shift 63
	.  error

	expresion_aritmetica  goto 74
	condicion  goto 261
	expresion_booleana  goto 76
	termino  goto 65
	factor  goto 66


state 247
	postcondicion : POST condicion ')' . ';'  (36)

	';'  shift 262
	.  error


state 248
	sentencia_condicional : if '(' error ')' THEN bloque_ejecutable_condicional ENDIF . ';'  (62)

	';'  shift 263
	.  error


state 249
	bloque_ejecutable_condicional : BEGIN sentencias_ejecutables END .  (78)

	.  reduce 78


state 250
	sentencia_condicional : if '(' condicion THEN bloque_ejecutable_condicional ENDIF ';' .  (63)

	.  reduce 63


state 251
	sentencia_condicional : if '(' condicion ')' THEN bloque_ejecutable_condicional ELSE . bloque_ejecutable_condicional ENDIF ';'  (61)

	IF  shift 29
	PRINT  shift 30
	BEGIN  shift 196
	DOUBLE  shift 31
	WHILE  shift 32
	ID  shift 33
	TRY  shift 34
	.  error

	sentencia_ejecutable  goto 197
	sentencia_asignacion  goto 37
	sentencia_llamado_funcion  goto 38
	sentencia_condicional  goto 39
	sentencia_imprimir  goto 40
	sentencia_iterativa  goto 41
	sentencia_conversion  goto 42
	sentencia_try_catch  goto 43
	if  goto 44
	bloque_ejecutable_condicional  goto 264
	print  goto 45
	while  goto 46
	try  goto 47


state 252
	sentencia_condicional : if '(' condicion ')' THEN bloque_ejecutable_condicional ENDIF . ';'  (60)

	';'  shift 265
	.  error


state 253
	sentencia_condicional : if condicion ')' THEN bloque_ejecutable_condicional ENDIF ';' .  (64)

	.  reduce 64


state 254
	bloque_ejecutable_iterativo : BEGIN sentencias_ejecutables_iterativas END .  (93)

	.  reduce 93


state 255
	sentencias_ejecutables_iterativas : sentencia_ejecutable_iterativa sentencias_ejecutables_iterativas .  (95)

	.  reduce 95


state 256
	retorno_funcion : RETURN '(' error ')' ';' .  (29)

	.  reduce 29


state 257
	retorno_funcion : RETURN '(' expresion_aritmetica ')' ';' .  (28)

	.  reduce 28


state 258
	postcondicion : POST '(' condicion ';' .  (37)

	.  reduce 37


state 259
	postcondicion : POST '(' condicion ')' . ';'  (35)

	';'  shift 266
	.  error


state 260
	postcondicion : POST ':' '(' error . ')' ';'  (34)

	')'  shift 267
	.  error


state 261
	postcondicion : POST ':' '(' condicion . ')' ';'  (33)

	')'  shift 268
	.  error


state 262
	postcondicion : POST condicion ')' ';' .  (36)

	.  reduce 36


state 263
	sentencia_condicional : if '(' error ')' THEN bloque_ejecutable_condicional ENDIF ';' .  (62)

	.  reduce 62


state 264
	sentencia_condicional : if '(' condicion ')' THEN bloque_ejecutable_condicional ELSE bloque_ejecutable_condicional . ENDIF ';'  (61)

	ENDIF  shift 269
	.  error


state 265
	sentencia_condicional : if '(' condicion ')' THEN bloque_ejecutable_condicional ENDIF ';' .  (60)

	.  reduce 60


state 266
	postcondicion : POST '(' condicion ')' ';' .  (35)

	.  reduce 35


state 267
	postcondicion : POST ':' '(' error ')' . ';'  (34)

	';'  shift 270
	.  error


state 268
	postcondicion : POST ':' '(' condicion ')' . ';'  (33)

	';'  shift 271
	.  error


state 269
	sentencia_condicional : if '(' condicion ')' THEN bloque_ejecutable_condicional ELSE bloque_ejecutable_condicional ENDIF . ';'  (61)

	';'  shift 272
	.  error


state 270
	postcondicion : POST ':' '(' error ')' ';' .  (34)

	.  reduce 34


state 271
	postcondicion : POST ':' '(' condicion ')' ';' .  (33)

	.  reduce 33


state 272
	sentencia_condicional : if '(' condicion ')' THEN bloque_ejecutable_condicional ELSE bloque_ejecutable_condicional ENDIF ';' .  (61)

	.  reduce 61


41 terminals, 44 nonterminals
130 grammar rules, 273 states
